x-airflow-env: &airflow-env
  AIRFLOW__CORE__EXECUTOR: LocalExecutor
  AIRFLOW__CORE__LOAD_EXAMPLES: "false"
  AIRFLOW__WEBSERVER__EXPOSE_CONFIG: "true"
  AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-db:5432/airflow
  AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
  AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
  AWS_REGION: ${AWS_REGION:-us-east-1}
  S3_BUCKET_NAME: ${S3_BUCKET_NAME}
  PGHOST: ${PGHOST}
  PGDATABASE: ${PGDATABASE}
  PGUSER: ${PGUSER}
  PGPASSWORD: ${PGPASSWORD}
  PGPORT: ${PGPORT:-5432}
  BCRA_BASE_URL: ${BCRA_BASE_URL:-https://api.bcra.gob.ar}
  BCRA_API_PATH: ${BCRA_API_PATH:-/estadisticas/v3.0}
  BCRA_CAT_PATH: ${BCRA_CAT_PATH:-/Monetarias}
  BCRA_FROM: ${BCRA_FROM:-2024-01-01}
  BCRA_TO: ${BCRA_TO:-2025-12-31}
  BCRA_SERIES: ${BCRA_SERIES:-usd_oficial}
  VERIFY_SSL: ${VERIFY_SSL:-false}
  AIRFLOW__WEBSERVER__WEB_SERVER_PORT: "8080"
  AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW_SECRET_KEY:-change_me_please}

services:
  airflow-db:
    image: postgres:15
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow -d airflow"]
      interval: 5s
      retries: 5
    volumes:
      - airflow-db:/var/lib/postgresql/data

  airflow-init:
    build:
      context: ./airflow
    image: nyc-airflow:latest
    depends_on:
      airflow-db:
        condition: service_healthy
    environment:
      <<: *airflow-env
      BCRA_BASE_URL: https://api.bcra.gob.ar
    entrypoint: ["/bin/bash","-lc"]
    command: |
      set -e

      echo "[INIT] Migrando metastore…"
      airflow db migrate

      echo "[INIT] Creando/actualizando usuario admin…"
      if airflow users list | awk '{print $1}' | grep -qx admin; then
        airflow users update \
          --username admin \
          --password admin
      else
        airflow users create \
          --username admin \
          --password admin \
          --firstname Air \
          --lastname Flow \
          --role Admin \
          --email admin@example.com
      fi

      echo "[INIT] OK"
      exit 0
    restart: "no"


  airflow-webserver:
    image: nyc-airflow:latest
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    environment:
      <<: *airflow-env
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8081:8080"
    command: webserver

  airflow-scheduler:
    image: nyc-airflow:latest
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    environment:
      <<: *airflow-env
      BCRA_BASE_URL: https://api.bcra.gob.ar
      BCRA_API_PATH: /estadisticas/v3.0
      BCRA_CAT_PATH: /Monetarias
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - /var/run/docker.sock:/var/run/docker.sock
    command: scheduler

volumes:
  airflow-db:
